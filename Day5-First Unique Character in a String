class Solution {
public:
    int firstUniqChar(string s) {
       
        int i,p=0;
        unordered_set<char> b(26);
        if(s.size()==0)
            return -1;
        if(s.size()==1)
            return 0;
        
        for(i = 0 ; i<s.size() ; i++)
        {
            auto a = s.find(s[i],i+1);
            if(b.find(s[i])==b.end())
            {
                if(a==string::npos)
                {
                     p = 1;
                     break;
                }
               
            }
            b.emplace(s[i]);
            
        }
        if(p==1)
            return i;
        else
            return -1;
    }
};
